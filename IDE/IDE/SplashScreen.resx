<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>